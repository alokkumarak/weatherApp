{"version":3,"sources":["app_component/weather.component.jsx","app_component/form.component.jsx","App.js","index.js"],"names":["Weather","props","className","city","weatherIcon","temp_celsius","min","max","minmaxtemp","temp_min","temp_max","description","Form","error","role","onSubmit","loadweather","type","name","autoComplete","placeholder","App","getWeather","e","a","preventDefault","target","elements","value","country","fetch","api_call","json","response","console","log","setState","sys","celsius","calCelsius","main","temp","weather","get_weatherIcons","id","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","this","Math","floor","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a3a1c76.chunk.js","sourcesContent":["import React from 'react';\r\nimport './weather.style.css';\r\n\r\nconst Weather=(props)=>{\r\n    return(\r\n         <div className=\"container\">\r\n\r\n            <div className=\"cards\">\r\n            <h1>{props.city}</h1>\r\n            <h5 className=\"py-4\">\r\n                <i className={`wi ${props.weatherIcon} display-1`}></i>\r\n\r\n            </h5>\r\n               {props.temp_celsius?<h1 className=\"py-2\">{props.temp_celsius}&deg;</h1>: null}\r\n                {minmaxtemp(props.temp_min,props.temp_max)}\r\n              <h4 className=\"py-3\">{props.description}</h4>  \r\n            </div>  \r\n         </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction minmaxtemp(min , max){\r\n    if(min && max){\r\n        return(\r\n            <h3>\r\n            <span className=\"px-4\">{min}&deg;</span>\r\n            <span className=\"px-4\">{max}&deg;</span>\r\n        </h3>\r\n        );\r\n    }\r\n \r\n}\r\nexport default Weather;","import React from 'react';\r\nimport \"./form.style.css\";\r\n\r\n\r\nconst Form = props =>{\r\n    return(\r\n        <div className=\"container\">\r\n         <div>{props.error?error():null }</div>\r\n            <form  onSubmit={props.loadweather}  >\r\n            \r\n            <div className=\"row pt-4 mt-4\">\r\n                <div className=\"col-md-3 offset-md-2\">\r\n                       <input type=\"text\" className=\"form-control\" name=\"city\" autoComplete=\"off\" placeholder=\"Enter City\"/>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                <input type=\"text\" className=\"form-control\" name=\"country\" autoComplete=\"off\" placeholder=\"Enter Country\"/>\r\n                </div>\r\n                <div className=\"col-md-3 mt-md-0 text-md-left\">\r\n                    <button className=\"btn btn-success\">Get Weather</button>\r\n                </div>                                \r\n            </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction error(){\r\n    return(\r\n       <div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n          Please enter City And Country Name !\r\n       </div>\r\n\r\n    );\r\n}\r\nexport default Form;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\nimport Weather from './app_component/weather.component';\n//import { render } from '@testing-library/react';\nimport Form from './app_component/form.component';\n\nconst API_KEY=\"4c4e1de3388868177700dcc3b0a66423\";\n//api call api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\n\nclass App extends React.Component{\n   constructor(){\n      super();\n      this.state={\n         city:undefined,\n         country:undefined,\n         icon:undefined,\n         main:undefined,\n         celsius:undefined,\n         temp_max:undefined,\n         temp_min:undefined,\n         description:\"\",\n         error:false\n      };\n   \n\n      this.weatherIcon = {\n         Thunderstorm: \"wi-thunderstorm\",\n         Drizzle: \"wi-sleet\",\n         Rain: \"wi-storm-showers\",\n         Snow: \"wi-snow\",\n         Atmosphere: \"wi-fog\",\n         Clear: \"wi-day-sunny\",\n         Clouds: \"wi-day-fog\"\n       };\n   }\n\n \n\n   get_weatherIcons(icons,rangeId){\n      switch(true){\n         case rangeId >=200 && rangeId <=232:\n             this.setState({icon:this.weatherIcon.Thunderstorm});\n             break;\n         case rangeId >=300 && rangeId <=321:\n             this.setState({icon:this.weatherIcon.Drizzle});\n             break;     \n         case rangeId >=500 && rangeId <=531:\n               this.setState({icon:this.weatherIcon.Rain});\n               break;        \n        case rangeId >=600 && rangeId <=622:\n            this.setState({icon:this.weatherIcon.Snow});\n                  break;  \n         case rangeId >=701 && rangeId <=781:\n             this.setState({icon:this.weatherIcon.Atmosphere});\n                     break;                                            \n       case rangeId ===800:\n               this.setState({icon:this.weatherIcon.Clear});\n                  break;\n         case rangeId >=801 && rangeId <=804:\n             this.setState({icon:this.weatherIcon.Clouds});\n                break;\n         default:\n            this.setState({icon:this.weatherIcon.Clouds});\n            break;                   \n\n      }\n   }\n\n   calCelsius(temp){\n      let cell=Math.floor(temp-273.15);\n      return cell;\n   }\n   getWeather = async e =>{\n      e.preventDefault();\n      const city=e.target.elements.city.value;\n      const country=e.target.elements.country.value;\n     if(city && country){\n\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\n\n      const response = await api_call.json();\n\n      console.log(response);\n\n      this.setState({\n         city:`${response.name},${response.sys.country}`,\n  \n         celsius:this.calCelsius(response.main.temp),\n         temp_max:this.calCelsius(response.main.temp_max),\n         temp_min:this.calCelsius(response.main.temp_min),\n         description:response.weather[0].description,\n        error:false\n\n      });\n      this.get_weatherIcons(this.weatherIcon,response.weather[0].id);\n\n\n     }\n     else{\n        this.setState({error:true});\n     }\n\n\n   };\n\n   \n\n   render(){\n      return (\n         <div className=\"App\">\n            <Form loadweather={this.getWeather} error={this.state.error} />\n         <Weather \n         city={this.state.city} \n         country={this.state.country}\n         temp_celsius={this.state.celsius}\n         temp_max={this.state.temp_max}\n         temp_min={this.state.temp_min} \n         description={this.state.description}\n         weatherIcon={this.state.icon}\n         />\n      </div>\n      );\n   }\n \n}\n\n\n\n\n\n\nexport default App;\n\n\n\n\n\n\n\n/*\nimport React from 'react';\n\n\nconst App =()=>{\n   return\n   <></>;\n};\n\nexport default App;\n\n*/\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}